{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\party_live_web\\\\src\\\\components\\\\calendar\\\\Calendar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { format, addMonths, subMonths, startOfWeek, addDays, startOfMonth, endOfMonth, endOfWeek, isSameMonth, isSameDay, addYears, subYears, startOfYear, getWeekOfMonth } from \"date-fns\";\nimport \"./calendar.css\";\nimport { ru } from \"date-fns/locale\";\nimport buildLocalizeFn from \"date-fns/locale/_lib/buildLocalizeFn\";\nconst monthValues = {\n  narrow: [\"Я\", \"Ф\", \"М\", \"А\", \"М\", \"И\", \"И\", \"А\", \"С\", \"О\", \"Н\", \"Д\"],\n  abbreviated: [\"янв.\", \"фев.\", \"март\", \"апр.\", \"май\", \"июнь\", \"июль\", \"авг.\", \"сент.\", \"окт.\", \"нояб.\", \"дек.\"],\n  wide: [\"январь\", \"февраль\", \"март\", \"апрель\", \"май\", \"июнь\", \"июль\", \"август\", \"сентябрь\", \"октябрь\", \"ноябрь\", \"декабрь\"]\n};\nru.localize.month = buildLocalizeFn({\n  values: monthValues,\n  defaultWidth: \"wide\",\n  defaultFormattingWidth: \"wide\"\n});\n\nconst Calendar = () => {\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentYear, setCurrentYear] = useState(new Date());\n  const [showTopFixedBlock, setShowTopFixedBloc] = useState(false);\n  const [choosedDayMonth, setChoosedDayMonth] = useState(false);\n  document.body.style.background = \"#fff\";\n\n  const renderHeader = allMonths => {\n    const dateFormat = \"MMMM\";\n    return React.createElement(\"div\", {\n      className: \"monthNameBigCalendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, !allMonths && React.createElement(\"div\", {\n      className: \"icon\",\n      onClick: prevMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"chevron_left\")), React.createElement(\"div\", {\n      className: \"col col-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, format(allMonths || currentMonth, dateFormat, {\n      locale: ru\n    }))), !allMonths && React.createElement(\"div\", {\n      className: \"\",\n      onClick: nextMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"chevron_right\")));\n  };\n\n  const renderDays = () => {\n    const dateFormat = \"E\";\n    const days = [];\n    let startDate = startOfWeek(currentMonth, {\n      weekStartsOn: 1\n    });\n\n    for (let i = 0; i < 7; i++) {\n      days.push(React.createElement(\"div\", {\n        className: \"col col-center\",\n        key: i,\n        style: format(addDays(startDate, i), \"E\") === \"Sat\" || format(addDays(startDate, i), \"E\") === \"Sun\" ? {\n          color: \"#f86262\"\n        } : {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, format(addDays(startDate, i), \"E\") === \"Sat\" ? \"Сб\" : format(addDays(startDate, i), dateFormat, {\n        locale: ru\n      }).slice(0, 2)));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"days row\",\n      style: {\n        background: \"rgb(243, 242, 242)\",\n        boxShadow: \"0 0 1px 0 rgba(0,0,0,0.05)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, days);\n  };\n\n  const onDateClick = (day, e) => {\n    document.body.style.overflow = \"hidden\";\n    setSelectedDate(day);\n    const currentRow = e.target.closest(\".animationRow\");\n    const currentCalendar = e.target.closest(\".animationMonthCalendar\");\n    const animationMonthCalendar = document.getElementsByClassName(\"animationMonthCalendar\");\n    const curCalendarId = document.getElementById(format(selectedDate, \"MMMM\"));\n    const calendarBody = curCalendarId.querySelector(\".body\");\n    const animationRows = calendarBody.querySelectorAll(\".animationRow\");\n\n    for (let j = 0; j < 12; j++) {\n      if (animationRows[j]) {\n        animationRows[j].style.height = \"50px\";\n      }\n\n      animationMonthCalendar[j].style.display = \"none\";\n    }\n\n    currentCalendar.style.display = \"block\";\n    currentCalendar.style.marginTop = 100 - getWeekOfMonth(day, {\n      weekStartsOn: 1\n    }) * 50 + \"px\";\n    setTimeout(() => {\n      currentRow.style.height = window.innerHeight + \"px\";\n    }, 350);\n    setChoosedDayMonth(format(day, \"MMMM yyyy\", {\n      locale: ru\n    }));\n  };\n\n  const renderCells = allMonths => {\n    const monthStart = startOfMonth(allMonths || currentMonth);\n    const monthEnd = endOfMonth(monthStart);\n    const startDate = startOfWeek(monthStart, {\n      weekStartsOn: 1\n    });\n    const endDate = endOfWeek(monthEnd);\n    const dateFormat = \"d\";\n    const rows = [];\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = format(day, dateFormat);\n        const cloneDay = day;\n        days.push(React.createElement(\"div\", {\n          className: `col cell outline ${!isSameMonth(day, monthStart) ? !choosedDayMonth ? \"disabled\" : \"disabledOpacity\" : isSameDay(day, selectedDate) ? \"selected\" : \"\"}`,\n          style: format(addDays(startDate, i), \"E\") === \"Sat\" || format(addDays(startDate, i), \"E\") === \"Sun\" ? isSameMonth(day, monthStart) ? {\n            color: \"#f86262\",\n            height: \"50px\"\n          } : {\n            height: \"50px\"\n          } : {\n            height: \"50px\"\n          },\n          key: day,\n          onClick: e => {\n            !e.target.classList.contains(\"disabled\") && !e.target.classList.contains(\"disabledOpacity\") && !e.target.classList.contains(\"numberDisabled\") && onDateClick(cloneDay, e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: !isSameMonth(day, monthStart) ? \"number numberDisabled\" : \"number\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, formattedDate)));\n        day = addDays(day, 1);\n      }\n\n      rows.push(React.createElement(\"div\", {\n        className: \"row animationRow\",\n        key: day,\n        style: {\n          height: \"50px\",\n          overflow: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, days, React.createElement(\"div\", {\n        className: \"calendarDayDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, format(selectedDate, \"EEEE d MMMM yyyy\", {\n        locale: ru\n      }), \" \\u0433.\"))));\n      days = [];\n    }\n\n    return React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, rows);\n  };\n\n  const nextMonth = () => {\n    setCurrentMonth(addMonths(currentMonth, 1));\n  };\n\n  const prevMonth = () => {\n    setCurrentMonth(subMonths(currentMonth, 1));\n  }; // ==================IOS START======================\n  //ALL MONTHS\n\n\n  let yearStart = startOfYear(currentYear);\n  const monthsOfYear = [];\n\n  for (let i = 0; i < 12; i++) {\n    monthsOfYear.push(yearStart);\n    yearStart = addMonths(yearStart, 1);\n  }\n\n  const nextIosYear = () => {\n    setCurrentYear(addYears(currentYear, 1));\n  };\n\n  const prevIosYear = () => {\n    setCurrentYear(subYears(currentYear, 1));\n  };\n\n  const renderIosHeader = () => {\n    const dateFormat = \"yyyy\";\n    return React.createElement(\"div\", {\n      className: \"headerIos rowIos \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon\",\n      onClick: prevIosYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"chevron_left\")), React.createElement(\"div\", {\n      className: \"headerIosYear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, format(currentYear, dateFormat, {\n      locale: ru\n    }))), React.createElement(\"div\", {\n      className: \"\",\n      onClick: nextIosYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"chevron_right\")));\n  };\n\n  const renderIosCells = el => {\n    const monthStart = startOfMonth(el);\n    const monthEnd = endOfMonth(monthStart);\n    const startDate = startOfWeek(monthStart, {\n      weekStartsOn: 1\n    });\n    const endDate = endOfWeek(monthEnd);\n\n    const clickOnMonth = () => {\n      setCurrentMonth(el);\n      const iosCalendar = document.getElementsByClassName(\"iosCalendar\")[0];\n      const bigCalendarWrap = document.getElementsByClassName(\"bigCalendarWrap\")[0];\n      iosCalendar.style.opacity = \"0\";\n      iosCalendar.style.zIndex = 0;\n      bigCalendarWrap.style.opacity = \"1\";\n      bigCalendarWrap.style.display = \"block\";\n      bigCalendarWrap.style.zIndex = 1;\n      setShowTopFixedBloc(true);\n      setTimeout(() => {\n        document.getElementById(format(el, \"MMMM\")).scrollIntoView({\n          block: \"center\",\n          behavior: \"smooth\"\n        });\n        window.scrollTo(0, window.pageYOffset);\n      }, 500);\n    };\n\n    const dateFormat = \"d\";\n    const rows = [];\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = format(day, dateFormat);\n        days.push(React.createElement(\"div\", {\n          className: `col cellIos ${!isSameMonth(day, monthStart) ? \"disabledIos\" : isSameDay(day, selectedDate) ? \"selectedIos\" : \"\"}`,\n          style: {\n            height: \"18px\",\n            fontSize: \"10px\"\n          },\n          key: day,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"number\",\n          style: format(addDays(startDate, i), \"E\") === \"Sat\" || format(addDays(startDate, i), \"E\") === \"Sun\" ? {\n            color: \"#999\",\n            display: \"flex\",\n            alignSelf: \"center\"\n          } : {\n            display: \"flex\",\n            alignSelf: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, formattedDate)));\n        day = addDays(day, 1);\n      }\n\n      rows.push(React.createElement(\"div\", {\n        className: \"rowIos\",\n        key: day,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, days));\n      days = [];\n    }\n\n    return React.createElement(\"div\", {\n      className: \"iosCalendarWrap\",\n      onClick: e => {\n        clickOnMonth();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"iosMonth\",\n      style: isSameMonth(el, new Date()) ? {\n        color: \"rgb(248, 98, 98)\"\n      } : {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, format(el, \"MMMM\", {\n      locale: ru\n    })), React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, rows));\n  }; // ==================IOS END====================\n\n\n  return React.createElement(\"div\", {\n    className: \"calendar\",\n    style: {\n      border: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"iosCalendar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, renderIosHeader(), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      margin: \"5px\",\n      background: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, monthsOfYear.map((el, i) => {\n    return React.createElement(\"div\", {\n      className: \"animationCalendarBlock\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, renderIosCells(el));\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: showTopFixedBlock ? \"fixedBlocksShow\" : \"fixedBlocksHide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"topArrowWrap\",\n    onClick: e => {\n      if (!choosedDayMonth) {\n        // CLICK по    < 2020 >\n        const iosCalendar = document.getElementsByClassName(\"iosCalendar\")[0];\n        const bigCalendarWrap = document.getElementsByClassName(\"bigCalendarWrap\")[0];\n        setShowTopFixedBloc(false);\n        iosCalendar.style.opacity = \"1\";\n        iosCalendar.style.zIndex = 1;\n        bigCalendarWrap.style.opacity = \"0\";\n        bigCalendarWrap.style.display = \"none\";\n      } else {\n        // CLICK по    < январь 2020\n        document.body.style.overflow = \"auto\";\n        const animationMonthCalendar = document.getElementsByClassName(\"animationMonthCalendar\");\n        const curCalendarId = document.getElementById(format(selectedDate, \"MMMM\"));\n        const calendarBody = curCalendarId.querySelector(\".body\");\n        const animationRows = calendarBody.querySelectorAll(\".animationRow\");\n\n        for (let j = 0; j < 12; j++) {\n          if (animationRows[j]) {\n            animationRows[j].style.height = \"50px\";\n          }\n        }\n\n        setChoosedDayMonth(false);\n        setTimeout(() => {\n          for (let i = 0; i < 12; i++) {\n            animationMonthCalendar[i].style.display = \"block\";\n            animationMonthCalendar[i].style.marginTop = 10 + \"px\";\n\n            if (i === 0) {\n              animationMonthCalendar[i].style.marginTop = 100 + \"px\";\n            }\n          }\n\n          document.getElementById(format(selectedDate, \"MMMM\")).scrollIntoView({\n            block: \"center\",\n            behavior: \"smooth\"\n          });\n        }, 400);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"topArrowCalendar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466\n    },\n    __self: this\n  }, choosedDayMonth || format(currentYear, \"yyyy\")))), renderDays()), React.createElement(\"div\", {\n    className: `bigCalendarWrap`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472\n    },\n    __self: this\n  }, monthsOfYear.map((el, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      id: format(el, \"MMMM\"),\n      className: \"animationMonthCalendar\",\n      style: ({\n        margin: \"10px\"\n      }, +format(el, \"M\") === 1 ? {\n        marginTop: \"100px\"\n      } : {\n        marginTop: \"10px\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, renderHeader(el), renderCells(el));\n  }))));\n};\n\nexport default Calendar;","map":{"version":3,"sources":["D:/GitHub/party_live_web/src/components/calendar/Calendar.js"],"names":["React","useState","useEffect","format","addMonths","subMonths","startOfWeek","addDays","startOfMonth","endOfMonth","endOfWeek","isSameMonth","isSameDay","addYears","subYears","startOfYear","getWeekOfMonth","ru","buildLocalizeFn","monthValues","narrow","abbreviated","wide","localize","month","values","defaultWidth","defaultFormattingWidth","Calendar","currentMonth","setCurrentMonth","Date","selectedDate","setSelectedDate","currentYear","setCurrentYear","showTopFixedBlock","setShowTopFixedBloc","choosedDayMonth","setChoosedDayMonth","document","body","style","background","renderHeader","allMonths","dateFormat","prevMonth","locale","nextMonth","renderDays","days","startDate","weekStartsOn","i","push","color","slice","boxShadow","onDateClick","day","e","overflow","currentRow","target","closest","currentCalendar","animationMonthCalendar","getElementsByClassName","curCalendarId","getElementById","calendarBody","querySelector","animationRows","querySelectorAll","j","height","display","marginTop","setTimeout","window","innerHeight","renderCells","monthStart","monthEnd","endDate","rows","formattedDate","cloneDay","classList","contains","yearStart","monthsOfYear","nextIosYear","prevIosYear","renderIosHeader","renderIosCells","el","clickOnMonth","iosCalendar","bigCalendarWrap","opacity","zIndex","scrollIntoView","block","behavior","scrollTo","pageYOffset","fontSize","alignSelf","border","justifyContent","flexWrap","margin","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  format,\r\n  addMonths,\r\n  subMonths,\r\n  startOfWeek,\r\n  addDays,\r\n  startOfMonth,\r\n  endOfMonth,\r\n  endOfWeek,\r\n  isSameMonth,\r\n  isSameDay,\r\n  addYears,\r\n  subYears,\r\n  startOfYear,\r\n  getWeekOfMonth\r\n} from \"date-fns\";\r\n\r\nimport \"./calendar.css\";\r\n\r\nimport { ru } from \"date-fns/locale\";\r\nimport buildLocalizeFn from \"date-fns/locale/_lib/buildLocalizeFn\";\r\n\r\nconst monthValues = {\r\n  narrow: [\"Я\", \"Ф\", \"М\", \"А\", \"М\", \"И\", \"И\", \"А\", \"С\", \"О\", \"Н\", \"Д\"],\r\n  abbreviated: [\r\n    \"янв.\",\r\n    \"фев.\",\r\n    \"март\",\r\n    \"апр.\",\r\n    \"май\",\r\n    \"июнь\",\r\n    \"июль\",\r\n    \"авг.\",\r\n    \"сент.\",\r\n    \"окт.\",\r\n    \"нояб.\",\r\n    \"дек.\"\r\n  ],\r\n  wide: [\r\n    \"январь\",\r\n    \"февраль\",\r\n    \"март\",\r\n    \"апрель\",\r\n    \"май\",\r\n    \"июнь\",\r\n    \"июль\",\r\n    \"август\",\r\n    \"сентябрь\",\r\n    \"октябрь\",\r\n    \"ноябрь\",\r\n    \"декабрь\"\r\n  ]\r\n};\r\n\r\nru.localize.month = buildLocalizeFn({\r\n  values: monthValues,\r\n  defaultWidth: \"wide\",\r\n  defaultFormattingWidth: \"wide\"\r\n});\r\n\r\nconst Calendar = () => {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const [currentYear, setCurrentYear] = useState(new Date());\r\n  const [showTopFixedBlock, setShowTopFixedBloc] = useState(false);\r\n\r\n  const [choosedDayMonth, setChoosedDayMonth] = useState(false);\r\n\r\n  document.body.style.background = \"#fff\";\r\n\r\n  const renderHeader = allMonths => {\r\n    const dateFormat = \"MMMM\";\r\n    return (\r\n      <div className=\"monthNameBigCalendar\">\r\n        <div className=\"\">\r\n          {!allMonths && (\r\n            <div className=\"icon\" onClick={prevMonth}>\r\n              chevron_left\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"col col-center\">\r\n          <span>\r\n            {format(allMonths || currentMonth, dateFormat, { locale: ru })}\r\n          </span>\r\n        </div>\r\n        {!allMonths && (\r\n          <div className=\"\" onClick={nextMonth}>\r\n            <div className=\"icon\">chevron_right</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDays = () => {\r\n    const dateFormat = \"E\";\r\n    const days = [];\r\n    let startDate = startOfWeek(currentMonth, { weekStartsOn: 1 });\r\n    for (let i = 0; i < 7; i++) {\r\n      days.push(\r\n        <div\r\n          className=\"col col-center\"\r\n          key={i}\r\n          style={\r\n            format(addDays(startDate, i), \"E\") === \"Sat\" ||\r\n            format(addDays(startDate, i), \"E\") === \"Sun\"\r\n              ? { color: \"#f86262\" }\r\n              : {}\r\n          }\r\n        >\r\n          {format(addDays(startDate, i), \"E\") === \"Sat\"\r\n            ? \"Сб\"\r\n            : format(addDays(startDate, i), dateFormat, { locale: ru }).slice(\r\n                0,\r\n                2\r\n              )}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div\r\n        className=\"days row\"\r\n        style={{\r\n          background: \"rgb(243, 242, 242)\",\r\n          boxShadow: \"0 0 1px 0 rgba(0,0,0,0.05)\"\r\n        }}\r\n      >\r\n        {days}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onDateClick = (day, e) => {\r\n    document.body.style.overflow = \"hidden\";\r\n    setSelectedDate(day);\r\n\r\n    const currentRow = e.target.closest(\".animationRow\");\r\n    const currentCalendar = e.target.closest(\".animationMonthCalendar\");\r\n    const animationMonthCalendar = document.getElementsByClassName(\r\n      \"animationMonthCalendar\"\r\n    );\r\n    const curCalendarId = document.getElementById(format(selectedDate, \"MMMM\"));\r\n    const calendarBody = curCalendarId.querySelector(\".body\");\r\n    const animationRows = calendarBody.querySelectorAll(\".animationRow\");\r\n\r\n    for (let j = 0; j < 12; j++) {\r\n      if (animationRows[j]) {\r\n        animationRows[j].style.height = \"50px\";\r\n      }\r\n      animationMonthCalendar[j].style.display = \"none\";\r\n    }\r\n\r\n    currentCalendar.style.display = \"block\";\r\n    currentCalendar.style.marginTop =\r\n      100 - getWeekOfMonth(day, { weekStartsOn: 1 }) * 50 + \"px\";\r\n\r\n    setTimeout(() => {\r\n      currentRow.style.height = window.innerHeight + \"px\";\r\n    }, 350);\r\n\r\n    setChoosedDayMonth(format(day, \"MMMM yyyy\", { locale: ru }));\r\n  };\r\n\r\n  const renderCells = allMonths => {\r\n    const monthStart = startOfMonth(allMonths || currentMonth);\r\n    const monthEnd = endOfMonth(monthStart);\r\n    const startDate = startOfWeek(monthStart, { weekStartsOn: 1 });\r\n    const endDate = endOfWeek(monthEnd);\r\n\r\n    const dateFormat = \"d\";\r\n    const rows = [];\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = \"\";\r\n\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n        formattedDate = format(day, dateFormat);\r\n        const cloneDay = day;\r\n        days.push(\r\n          <div\r\n            className={`col cell outline ${\r\n              !isSameMonth(day, monthStart)\r\n                ? !choosedDayMonth\r\n                  ? \"disabled\"\r\n                  : \"disabledOpacity\"\r\n                : isSameDay(day, selectedDate)\r\n                ? \"selected\"\r\n                : \"\"\r\n            }`}\r\n            style={\r\n              format(addDays(startDate, i), \"E\") === \"Sat\" ||\r\n              format(addDays(startDate, i), \"E\") === \"Sun\"\r\n                ? isSameMonth(day, monthStart)\r\n                  ? { color: \"#f86262\", height: \"50px\" }\r\n                  : { height: \"50px\" }\r\n                : { height: \"50px\" }\r\n            }\r\n            key={day}\r\n            onClick={e => {\r\n              !e.target.classList.contains(\"disabled\") &&\r\n                !e.target.classList.contains(\"disabledOpacity\") &&\r\n                !e.target.classList.contains(\"numberDisabled\") &&\r\n                onDateClick(cloneDay, e);\r\n            }}\r\n          >\r\n            <span\r\n              className={\r\n                !isSameMonth(day, monthStart)\r\n                  ? \"number numberDisabled\"\r\n                  : \"number\"\r\n              }\r\n            >\r\n              {formattedDate}\r\n            </span>\r\n          </div>\r\n        );\r\n        day = addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div\r\n          className=\"row animationRow\"\r\n          key={day}\r\n          style={{ height: \"50px\", overflow: \"hidden\" }}\r\n        >\r\n          {days}\r\n          <div className=\"calendarDayDescription\">\r\n            <p>{format(selectedDate, \"EEEE d MMMM yyyy\", { locale: ru })} г.</p>\r\n          </div>\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return <div className=\"body\">{rows}</div>;\r\n  };\r\n\r\n  const nextMonth = () => {\r\n    setCurrentMonth(addMonths(currentMonth, 1));\r\n  };\r\n  const prevMonth = () => {\r\n    setCurrentMonth(subMonths(currentMonth, 1));\r\n  };\r\n\r\n  // ==================IOS START======================\r\n  //ALL MONTHS\r\n  let yearStart = startOfYear(currentYear);\r\n  const monthsOfYear = [];\r\n  for (let i = 0; i < 12; i++) {\r\n    monthsOfYear.push(yearStart);\r\n    yearStart = addMonths(yearStart, 1);\r\n  }\r\n\r\n  const nextIosYear = () => {\r\n    setCurrentYear(addYears(currentYear, 1));\r\n  };\r\n  const prevIosYear = () => {\r\n    setCurrentYear(subYears(currentYear, 1));\r\n  };\r\n\r\n  const renderIosHeader = () => {\r\n    const dateFormat = \"yyyy\";\r\n    return (\r\n      <div className=\"headerIos rowIos \">\r\n        <div className=\"\">\r\n          <div className=\"icon\" onClick={prevIosYear}>\r\n            chevron_left\r\n          </div>\r\n        </div>\r\n        <div className=\"headerIosYear\">\r\n          <span>{format(currentYear, dateFormat, { locale: ru })}</span>\r\n        </div>\r\n        <div className=\"\" onClick={nextIosYear}>\r\n          <div className=\"icon\">chevron_right</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const renderIosCells = el => {\r\n    const monthStart = startOfMonth(el);\r\n    const monthEnd = endOfMonth(monthStart);\r\n    const startDate = startOfWeek(monthStart, { weekStartsOn: 1 });\r\n    const endDate = endOfWeek(monthEnd);\r\n\r\n    const clickOnMonth = () => {\r\n      setCurrentMonth(el);\r\n\r\n      const iosCalendar = document.getElementsByClassName(\"iosCalendar\")[0];\r\n      const bigCalendarWrap = document.getElementsByClassName(\r\n        \"bigCalendarWrap\"\r\n      )[0];\r\n\r\n      iosCalendar.style.opacity = \"0\";\r\n      iosCalendar.style.zIndex = 0;\r\n\r\n      bigCalendarWrap.style.opacity = \"1\";\r\n      bigCalendarWrap.style.display = \"block\";\r\n      bigCalendarWrap.style.zIndex = 1;\r\n\r\n      setShowTopFixedBloc(true);\r\n\r\n      setTimeout(() => {\r\n        document\r\n          .getElementById(format(el, \"MMMM\"))\r\n          .scrollIntoView({ block: \"center\", behavior: \"smooth\" });\r\n        window.scrollTo(0, window.pageYOffset);\r\n      }, 500);\r\n    };\r\n\r\n    const dateFormat = \"d\";\r\n    const rows = [];\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = \"\";\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n        formattedDate = format(day, dateFormat);\r\n        days.push(\r\n          <div\r\n            className={`col cellIos ${\r\n              !isSameMonth(day, monthStart)\r\n                ? \"disabledIos\"\r\n                : isSameDay(day, selectedDate)\r\n                ? \"selectedIos\"\r\n                : \"\"\r\n            }`}\r\n            style={{\r\n              height: \"18px\",\r\n              fontSize: \"10px\"\r\n            }}\r\n            key={day}\r\n          >\r\n            <span\r\n              className=\"number\"\r\n              style={\r\n                format(addDays(startDate, i), \"E\") === \"Sat\" ||\r\n                format(addDays(startDate, i), \"E\") === \"Sun\"\r\n                  ? { color: \"#999\", display: \"flex\", alignSelf: \"center\" }\r\n                  : { display: \"flex\", alignSelf: \"center\" }\r\n              }\r\n            >\r\n              {formattedDate}\r\n            </span>\r\n          </div>\r\n        );\r\n        day = addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div className=\"rowIos\" key={day}>\r\n          {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return (\r\n      <div\r\n        className=\"iosCalendarWrap\"\r\n        onClick={e => {\r\n          clickOnMonth();\r\n        }}\r\n      >\r\n        <p\r\n          className=\"iosMonth\"\r\n          style={\r\n            isSameMonth(el, new Date())\r\n              ? { color: \"rgb(248, 98, 98)\" }\r\n              : { color: \"black\" }\r\n          }\r\n        >\r\n          {format(el, \"MMMM\", { locale: ru })}\r\n        </p>\r\n        <div className=\"body\">{rows}</div>\r\n      </div>\r\n    );\r\n  };\r\n  // ==================IOS END====================\r\n\r\n  return (\r\n    <div className=\"calendar\" style={{ border: \"none\" }}>\r\n      <div className=\"iosCalendar\">\r\n        {renderIosHeader()}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            flexWrap: \"wrap\",\r\n            margin: \"5px\",\r\n            background: \"#fff\"\r\n          }}\r\n        >\r\n          {monthsOfYear.map((el, i) => {\r\n            return (\r\n              <div className=\"animationCalendarBlock\" key={i}>\r\n                {renderIosCells(el)}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {\r\n          <div\r\n            className={\r\n              showTopFixedBlock ? \"fixedBlocksShow\" : \"fixedBlocksHide\"\r\n            }\r\n          >\r\n            <p\r\n              className=\"topArrowWrap\"\r\n              onClick={e => {\r\n                if (!choosedDayMonth) {\r\n                  // CLICK по    < 2020 >\r\n                  const iosCalendar = document.getElementsByClassName(\r\n                    \"iosCalendar\"\r\n                  )[0];\r\n                  const bigCalendarWrap = document.getElementsByClassName(\r\n                    \"bigCalendarWrap\"\r\n                  )[0];\r\n                  setShowTopFixedBloc(false);\r\n\r\n                  iosCalendar.style.opacity = \"1\";\r\n                  iosCalendar.style.zIndex = 1;\r\n\r\n                  bigCalendarWrap.style.opacity = \"0\";\r\n                  bigCalendarWrap.style.display = \"none\";\r\n                } else {\r\n                  // CLICK по    < январь 2020\r\n                  document.body.style.overflow = \"auto\";\r\n\r\n                  const animationMonthCalendar = document.getElementsByClassName(\r\n                    \"animationMonthCalendar\"\r\n                  );\r\n\r\n                  const curCalendarId = document.getElementById(\r\n                    format(selectedDate, \"MMMM\")\r\n                  );\r\n                  const calendarBody = curCalendarId.querySelector(\".body\");\r\n                  const animationRows = calendarBody.querySelectorAll(\r\n                    \".animationRow\"\r\n                  );\r\n\r\n                  for (let j = 0; j < 12; j++) {\r\n                    if (animationRows[j]) {\r\n                      animationRows[j].style.height = \"50px\";\r\n                    }\r\n                  }\r\n                  setChoosedDayMonth(false);\r\n\r\n                  setTimeout(() => {\r\n                    for (let i = 0; i < 12; i++) {\r\n                      animationMonthCalendar[i].style.display = \"block\";\r\n                      animationMonthCalendar[i].style.marginTop = 10 + \"px\";\r\n                      if (i === 0) {\r\n                        animationMonthCalendar[i].style.marginTop = 100 + \"px\";\r\n                      }\r\n                    }\r\n                    document\r\n                      .getElementById(format(selectedDate, \"MMMM\"))\r\n                      .scrollIntoView({ block: \"center\", behavior: \"smooth\" });\r\n                  }, 400);\r\n                }\r\n              }}\r\n            >\r\n              <span className=\"topArrowCalendar\">\r\n                <span>{choosedDayMonth || format(currentYear, \"yyyy\")}</span>\r\n              </span>\r\n            </p>\r\n            {renderDays()}\r\n          </div>\r\n        }\r\n        <div className={`bigCalendarWrap`}>\r\n          {monthsOfYear.map((el, i) => {\r\n            return (\r\n              <div\r\n                key={i}\r\n                id={format(el, \"MMMM\")}\r\n                className=\"animationMonthCalendar\"\r\n                style={\r\n                  ({ margin: \"10px\" },\r\n                  +format(el, \"M\") === 1\r\n                    ? { marginTop: \"100px\" }\r\n                    : { marginTop: \"10px\" })\r\n                }\r\n              >\r\n                {renderHeader(el)}\r\n                {renderCells(el)}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"]},"metadata":{},"sourceType":"module"}