{"ast":null,"code":"import _slicedToArray from\"D:\\\\GitHub\\\\party_live_web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import GooggleMapReact from\"google-map-react\";import useSupercluster from\"use-supercluster\";import{Link}from\"react-router-dom\";import BottomMenu from\"../../components/bottomMenu/BottomMenu\";import Header from\"../../components/header/Header\";import QUERY from\"../../query\";import{isShowStreamNow,isWorkTimeNow}from\"../../calculateTime\";import{API_KEY}from\"../../constants\";import\"./map.css\";import TypeNav from\"../../components/typeNav/TypeNav\";import CompanyNav from\"../../components/companyNav/CompanyNav\";import SlideSideMenu from\"../../components/slideSideMenu/SlideSideMenu\";import Loader from\"../../components/loader/Loader\";var Marker=function Marker(_ref){var children=_ref.children;return children;};var MapComponent=function MapComponent(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),DATA=_useState2[0],setDATA=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),markers=_useState4[0],setMarkers=_useState4[1];var mapRef=useRef();var _useState5=useState(11),_useState6=_slicedToArray(_useState5,2),zoom=_useState6[0],setZoom=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),bounds=_useState8[0],setBounds=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),isLoading=_useState10[0],setIsLoading=_useState10[1];useEffect(function(){QUERY({query:\"query{\\n        places{id name coordinates\\n          streams{url name id preview\\n            schedules{id day start_time end_time}\\n          }\\n          schedules{id day start_time end_time}\\n          categories{id name slug}}\\n        }\"}).then(function(res){return res.json();}).then(function(data){setIsLoading(false);setMarkers(data.data.places);setDATA(data.data.places);}).catch(function(err){console.log(err,\"  ERR\");});},[]);var points=markers.map(function(el,i){return{type:\"Feature\",item:el,properties:{cluster:false,crimeId:i,category:el.categories[0].name},geometry:{type:\"Point\",coordinates:[+el.coordinates.split(\",\")[1],+el.coordinates.split(\",\")[0]]}};});var _useSupercluster=useSupercluster({points:points,bounds:bounds,zoom:zoom,options:{radius:170,maxZoom:20}}),clusters=_useSupercluster.clusters;var clickedType=function clickedType(type){if(type){var filteredData=DATA.filter(function(el){return el.categories[0].name.toUpperCase()===type.toUpperCase();});setMarkers(filteredData);}else{setMarkers(DATA);}};var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showSlideSideMenu=_useState12[0],setShowSlideSideMenu=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isShowMenu=_useState14[0],setIsShowMenu=_useState14[1];var hideSideMenu=function hideSideMenu(){setShowSlideSideMenu(false);setTimeout(function(){document.body.style.overflow=\"visible\";},400);setIsShowMenu(false);};var showSideMenu=function showSideMenu(){setShowSlideSideMenu(true);document.body.style.overflow=\"hidden\";setIsShowMenu(true);};window.onresize=function(e){hideSideMenu();};var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),defaultCenter=_useState16[0],setDefaultCenter=_useState16[1];if(navigator.geolocation&&!defaultCenter){navigator.geolocation.getCurrentPosition(function(pos){console.log(pos.coords,\"GEO POS____\");setDefaultCenter({lat:pos.coords.latitude,lng:pos.coords.longitude});},function(err){console.log(err,\" GEOLOCATION ERROR\");});}else{console.log(\"Геолокация недоступна\");}return React.createElement(\"div\",{onClick:function onClick(e){if(e.target.className!==\"SlideSideMenu\"&&showSlideSideMenu){hideSideMenu();}}},React.createElement(Header,{logo:true,arrow:true,burger:true,toSlideFixedHeader:isShowMenu,showSlideSideMenu:showSlideSideMenu,showSideMenu:showSideMenu}),React.createElement(\"div\",{className:\"navContainerMap\"},React.createElement(CompanyNav,{style:{zIndex:1},currentPage:\"/map\",clickedType:clickedType}),React.createElement(TypeNav,{style:{zIndex:1}})),isLoading&&React.createElement(Loader,null),!isLoading&&React.createElement(\"div\",{className:\"mapContainer\"},React.createElement(GooggleMapReact,{style:{height:\"100%\",width:\"100%\"},bootstrapURLKeys:{key:API_KEY},defaultCenter:defaultCenter||{lat:53.904577,lng:27.557328},defaultZoom:8,yesIWantToUseGoogleMapApiInternals:true,onGoogleApiLoaded:function onGoogleApiLoaded(_ref2){var map=_ref2.map;mapRef.current=map;},onChange:function onChange(_ref3){var zoom=_ref3.zoom,bounds=_ref3.bounds;setZoom(zoom);setBounds([bounds.nw.lng,bounds.se.lat,bounds.se.lng,bounds.nw.lat]);}},defaultCenter&&React.createElement(Marker,{lat:defaultCenter.lat,lng:defaultCenter.lng},React.createElement(\"img\",{alt:\"me\",style:{height:\"32px\",width:\"32px\"},src:\"\".concat(process.env.PUBLIC_URL,\"/img/dancer.png\"),className:\"eye\"})),clusters.map(function(cluster){var _cluster$geometry$coo=_slicedToArray(cluster.geometry.coordinates,2),longitude=_cluster$geometry$coo[0],latitude=_cluster$geometry$coo[1];var _cluster$properties=cluster.properties,isCluster=_cluster$properties.cluster,pointCount=_cluster$properties.point_count;//ЗАМЕНА НА ЦИФРЫ\nif(isCluster){return React.createElement(Marker,{key:cluster.properties.cluster_id,lat:latitude,lng:longitude},React.createElement(\"div\",{className:\"clusterMarker\"},React.createElement(\"p\",null,\" \",pointCount)));}//БЕЗ ЗАМЕНЫ НА ЦИФРЫ\nconsole.log(cluster.item,\" ITEM\");var streamTime=\"\",workTime=\"\",isWork=false;var setShowStream=function setShowStream(time){streamTime=time;};var setWorkTime=function setWorkTime(time){workTime=time;};var setIsWork=function setIsWork(bool){isWork=bool;};isShowStreamNow(cluster.item,setShowStream);isWorkTimeNow(cluster.item,setWorkTime,setIsWork);return React.createElement(Marker,{key:cluster.properties.crimeId,lat:latitude,lng:longitude},React.createElement(Link,{to:{pathname:\"/company/\".concat(cluster.item.id)}},React.createElement(\"div\",{className:\"mapMarkerWrap\"},React.createElement(\"div\",{className:\"mapMarker\"},!!streamTime&&React.createElement(\"video\",{className:\"companyImg1\",src:cluster.item.streams[0].preview,autoPlay:true}),!streamTime&&React.createElement(\"div\",{className:\"companyImg1\",style:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}},React.createElement(\"p\",{style:{color:\"#fff\",textAlign:\"center\",padding:\"3px\"}},\"\\u0422\\u0440\\u0430\\u043D\\u0441\\u043B\\u044F\\u0446\\u0438\\u0438 \\u043D\\u0435\\u0442\"))),React.createElement(\"p\",{className:\"mapMarkerName\"},cluster.item.categories[0].name,\" \\\"\",cluster.item.name,\"\\\"\",React.createElement(\"span\",{className:\"openedTo\"},isWork&&React.createElement(\"span\",null,\" \\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u043E: \\u0434\\u043E \",workTime.split(\"-\")[1]),!isWork&&React.createElement(\"span\",null,\" \\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u043E \"))),React.createElement(\"div\",{className:\"arrow\"}))));}))),React.createElement(BottomMenu,{toSlideFixedBottomMenu:isShowMenu}),React.createElement(SlideSideMenu,{isShowMenu:isShowMenu}));};export default MapComponent;","map":{"version":3,"sources":["D:/GitHub/party_live_web/src/pages/map/Map.js"],"names":["React","useState","useRef","useEffect","GooggleMapReact","useSupercluster","Link","BottomMenu","Header","QUERY","isShowStreamNow","isWorkTimeNow","API_KEY","TypeNav","CompanyNav","SlideSideMenu","Loader","Marker","children","MapComponent","props","DATA","setDATA","markers","setMarkers","mapRef","zoom","setZoom","bounds","setBounds","isLoading","setIsLoading","query","then","res","json","data","places","catch","err","console","log","points","map","el","i","type","item","properties","cluster","crimeId","category","categories","name","geometry","coordinates","split","options","radius","maxZoom","clusters","clickedType","filteredData","filter","toUpperCase","showSlideSideMenu","setShowSlideSideMenu","isShowMenu","setIsShowMenu","hideSideMenu","setTimeout","document","body","style","overflow","showSideMenu","window","onresize","e","defaultCenter","setDefaultCenter","navigator","geolocation","getCurrentPosition","pos","coords","lat","latitude","lng","longitude","target","className","zIndex","height","width","key","current","nw","se","process","env","PUBLIC_URL","isCluster","pointCount","point_count","cluster_id","streamTime","workTime","isWork","setShowStream","time","setWorkTime","setIsWork","bool","pathname","id","streams","preview","display","alignItems","justifyContent","color","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport GooggleMapReact from \"google-map-react\";\r\nimport useSupercluster from \"use-supercluster\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BottomMenu from \"../../components/bottomMenu/BottomMenu\";\r\nimport Header from \"../../components/header/Header\";\r\n\r\nimport QUERY from \"../../query\";\r\nimport { isShowStreamNow, isWorkTimeNow } from \"../../calculateTime\";\r\nimport { API_KEY } from \"../../constants\";\r\n\r\nimport \"./map.css\";\r\n\r\nimport TypeNav from \"../../components/typeNav/TypeNav\";\r\nimport CompanyNav from \"../../components/companyNav/CompanyNav\";\r\nimport SlideSideMenu from \"../../components/slideSideMenu/SlideSideMenu\";\r\nimport Loader from \"../../components/loader/Loader\";\r\n\r\nconst Marker = ({ children }) => children;\r\n\r\nconst MapComponent = props => {\r\n  const [DATA, setDATA] = useState([]);\r\n\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  const mapRef = useRef();\r\n  const [zoom, setZoom] = useState(11);\r\n  const [bounds, setBounds] = useState(null);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    QUERY({\r\n      query: `query{\r\n        places{id name coordinates\r\n          streams{url name id preview\r\n            schedules{id day start_time end_time}\r\n          }\r\n          schedules{id day start_time end_time}\r\n          categories{id name slug}}\r\n        }`\r\n    })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsLoading(false);\r\n        setMarkers(data.data.places);\r\n        setDATA(data.data.places);\r\n      })\r\n      .catch(err => {\r\n        console.log(err, \"  ERR\");\r\n      });\r\n  }, []);\r\n\r\n  const points = markers.map((el, i) => {\r\n    return {\r\n      type: \"Feature\",\r\n      item: el,\r\n      properties: {\r\n        cluster: false,\r\n        crimeId: i,\r\n        category: el.categories[0].name\r\n      },\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [\r\n          +el.coordinates.split(\",\")[1],\r\n          +el.coordinates.split(\",\")[0]\r\n        ]\r\n      }\r\n    };\r\n  });\r\n\r\n  const { clusters } = useSupercluster({\r\n    points,\r\n    bounds,\r\n    zoom,\r\n    options: {\r\n      radius: 170,\r\n      maxZoom: 20\r\n    }\r\n  });\r\n\r\n  const clickedType = type => {\r\n    if (type) {\r\n      const filteredData = DATA.filter(\r\n        el => el.categories[0].name.toUpperCase() === type.toUpperCase()\r\n      );\r\n      setMarkers(filteredData);\r\n    } else {\r\n      setMarkers(DATA);\r\n    }\r\n  };\r\n\r\n  const [showSlideSideMenu, setShowSlideSideMenu] = useState(false);\r\n  const [isShowMenu, setIsShowMenu] = useState(false);\r\n\r\n  const hideSideMenu = () => {\r\n    setShowSlideSideMenu(false);\r\n    setTimeout(() => {\r\n      document.body.style.overflow = \"visible\";\r\n    }, 400);\r\n    setIsShowMenu(false);\r\n  };\r\n\r\n  const showSideMenu = () => {\r\n    setShowSlideSideMenu(true);\r\n    document.body.style.overflow = \"hidden\";\r\n    setIsShowMenu(true);\r\n  };\r\n\r\n  window.onresize = function(e) {\r\n    hideSideMenu();\r\n  };\r\n\r\n  const [defaultCenter, setDefaultCenter] = useState();\r\n\r\n  if (navigator.geolocation && !defaultCenter) {\r\n    navigator.geolocation.getCurrentPosition(\r\n      pos => {\r\n        console.log(pos.coords, \"GEO POS____\");\r\n        setDefaultCenter({\r\n          lat: pos.coords.latitude,\r\n          lng: pos.coords.longitude\r\n        });\r\n      },\r\n      err => {\r\n        console.log(err, \" GEOLOCATION ERROR\");\r\n      }\r\n    );\r\n  } else {\r\n    console.log(\"Геолокация недоступна\");\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={e => {\r\n        if (e.target.className !== \"SlideSideMenu\" && showSlideSideMenu) {\r\n          hideSideMenu();\r\n        }\r\n      }}\r\n    >\r\n      <Header\r\n        logo\r\n        arrow\r\n        burger\r\n        toSlideFixedHeader={isShowMenu}\r\n        showSlideSideMenu={showSlideSideMenu}\r\n        showSideMenu={showSideMenu}\r\n      />\r\n      <div className=\"navContainerMap\">\r\n        <CompanyNav\r\n          style={{ zIndex: 1 }}\r\n          currentPage=\"/map\"\r\n          clickedType={clickedType}\r\n        />\r\n        <TypeNav style={{ zIndex: 1 }} />\r\n      </div>\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <div className=\"mapContainer\">\r\n          <GooggleMapReact\r\n            style={{\r\n              height: \"100%\",\r\n              width: \"100%\"\r\n            }}\r\n            bootstrapURLKeys={{\r\n              key: API_KEY\r\n            }}\r\n            defaultCenter={\r\n              defaultCenter || {\r\n                lat: 53.904577,\r\n                lng: 27.557328\r\n              }\r\n            }\r\n            defaultZoom={8}\r\n            yesIWantToUseGoogleMapApiInternals\r\n            onGoogleApiLoaded={({ map }) => {\r\n              mapRef.current = map;\r\n            }}\r\n            onChange={({ zoom, bounds }) => {\r\n              setZoom(zoom);\r\n              setBounds([\r\n                bounds.nw.lng,\r\n                bounds.se.lat,\r\n                bounds.se.lng,\r\n                bounds.nw.lat\r\n              ]);\r\n            }}\r\n          >\r\n            {defaultCenter && (\r\n              <Marker lat={defaultCenter.lat} lng={defaultCenter.lng}>\r\n                <img\r\n                  alt=\"me\"\r\n                  style={{ height: \"32px\", width: \"32px\" }}\r\n                  src={`${process.env.PUBLIC_URL}/img/dancer.png`}\r\n                  className=\"eye\"\r\n                />\r\n              </Marker>\r\n            )}\r\n\r\n            {clusters.map(cluster => {\r\n              const [longitude, latitude] = cluster.geometry.coordinates;\r\n              const {\r\n                cluster: isCluster,\r\n                point_count: pointCount\r\n              } = cluster.properties;\r\n\r\n              //ЗАМЕНА НА ЦИФРЫ\r\n              if (isCluster) {\r\n                return (\r\n                  <Marker\r\n                    key={cluster.properties.cluster_id}\r\n                    lat={latitude}\r\n                    lng={longitude}\r\n                  >\r\n                    <div className=\"clusterMarker\">\r\n                      <p> {pointCount}</p>\r\n                    </div>\r\n                  </Marker>\r\n                );\r\n              }\r\n\r\n              //БЕЗ ЗАМЕНЫ НА ЦИФРЫ\r\n              console.log(cluster.item, \" ITEM\");\r\n\r\n              let streamTime = \"\",\r\n                workTime = \"\",\r\n                isWork = false;\r\n\r\n              const setShowStream = time => {\r\n                streamTime = time;\r\n              };\r\n              const setWorkTime = time => {\r\n                workTime = time;\r\n              };\r\n              const setIsWork = bool => {\r\n                isWork = bool;\r\n              };\r\n\r\n              isShowStreamNow(cluster.item, setShowStream);\r\n              isWorkTimeNow(cluster.item, setWorkTime, setIsWork);\r\n\r\n              return (\r\n                <Marker\r\n                  key={cluster.properties.crimeId}\r\n                  lat={latitude}\r\n                  lng={longitude}\r\n                >\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/company/${cluster.item.id}`\r\n                    }}\r\n                  >\r\n                    <div className=\"mapMarkerWrap\">\r\n                      <div className=\"mapMarker\">\r\n                        {!!streamTime && (\r\n                          <video\r\n                            className=\"companyImg1\"\r\n                            src={cluster.item.streams[0].preview}\r\n                            autoPlay\r\n                          />\r\n                        )}\r\n                        {!streamTime && (\r\n                          <div\r\n                            className=\"companyImg1\"\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"center\"\r\n                            }}\r\n                          >\r\n                            <p\r\n                              style={{\r\n                                color: \"#fff\",\r\n                                textAlign: \"center\",\r\n                                padding: \"3px\"\r\n                              }}\r\n                            >\r\n                              Трансляции нет\r\n                            </p>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <p className=\"mapMarkerName\">\r\n                        {cluster.item.categories[0].name} \"{cluster.item.name}\"\r\n                        <span className=\"openedTo\">\r\n                          {isWork && (\r\n                            <span> Открыто: до {workTime.split(\"-\")[1]}</span>\r\n                          )}\r\n                          {!isWork && <span> Закрыто </span>}\r\n                        </span>\r\n                      </p>\r\n                      <div className=\"arrow\"></div>\r\n                    </div>\r\n                  </Link>\r\n                </Marker>\r\n              );\r\n            })}\r\n          </GooggleMapReact>\r\n        </div>\r\n      )}\r\n\r\n      <BottomMenu toSlideFixedBottomMenu={isShowMenu} />\r\n      <SlideSideMenu isShowMenu={isShowMenu} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n"]},"metadata":{},"sourceType":"module"}