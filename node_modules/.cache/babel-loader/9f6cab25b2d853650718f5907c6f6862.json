{"ast":null,"code":"var numberDayNow=new Date().getDay()===0?6:new Date().getDay()-1;var numberDayYest;if(new Date().getDay()===0){numberDayYest=5;}else if(new Date().getDay()===1){numberDayYest=6;}else{numberDayYest=new Date().getDay()-2;}var HtoMs=3600000,MtoMs=60000;var currentTimeMS=new Date().getHours()*HtoMs+new Date().getMinutes()*MtoMs;export var isShowStreamNow=function isShowStreamNow(item,setShowStream){var yesterdayStream=item.streams[0].schedules[numberDayYest],todayStream=item.streams[0].schedules[numberDayNow];var startYesterdayStreamMS=yesterdayStream.start_time.split(\":\")[0]*HtoMs+yesterdayStream.start_time.split(\":\")[1]*MtoMs;var endYesterdayStreamMS=yesterdayStream.end_time.split(\":\")[0]*HtoMs+yesterdayStream.end_time.split(\":\")[1]*MtoMs;var startTodayStreamMS=todayStream.start_time.split(\":\")[0]*HtoMs+todayStream.start_time.split(\":\")[1]*MtoMs;var endTodayStreamMS=todayStream.end_time.split(\":\")[0]*HtoMs+todayStream.end_time.split(\":\")[1]*MtoMs;if(startYesterdayStreamMS>endYesterdayStreamMS&&endYesterdayStreamMS>currentTimeMS){// идет видео за вчерашний день ещe\nsetShowStream(true);}else if(startTodayStreamMS>endTodayStreamMS&&currentTimeMS>startTodayStreamMS){// если видео началось сегодня и закончилось завтра\nsetShowStream(true);}else if(startTodayStreamMS<endTodayStreamMS&&currentTimeMS>startTodayStreamMS&&currentTimeMS<endTodayStreamMS){// началось и закончилось сегодня\nsetShowStream(true);}else{setShowStream(false);}};export var isWorkTimeNow=function isWorkTimeNow(item,setWorkTime,setIsWork){var yesterdayWorkTime=item.schedules[numberDayYest],todayWorkTime=item.schedules[numberDayNow];var endYesterdayMS=yesterdayWorkTime.end_time.split(\":\")[0]*HtoMs+yesterdayWorkTime.end_time.split(\":\")[1]*MtoMs;var startYesterdayMS=yesterdayWorkTime.start_time.split(\":\")[0]*HtoMs+yesterdayWorkTime.start_time.split(\":\")[1]*MtoMs;var endTodayMS=todayWorkTime.end_time.split(\":\")[0]*HtoMs+todayWorkTime.end_time.split(\":\")[1]*MtoMs;var startTodayMS=todayWorkTime.start_time.split(\":\")[0]*HtoMs+todayWorkTime.start_time.split(\":\")[1]*MtoMs;if(startYesterdayMS>endYesterdayMS&&endYesterdayMS>currentTimeMS){// идет работа за вчерашний день ещe\nsetIsWork(true);setWorkTime(yesterdayWorkTime.start_time.split(\":\")[0]+\":\"+yesterdayWorkTime.start_time.split(\":\")[1]+\"-\"+yesterdayWorkTime.end_time.split(\":\")[0]+\":\"+yesterdayWorkTime.end_time.split(\":\")[1]);}else if(startTodayMS>endTodayMS&&currentTimeMS>startTodayMS){// если работа началось сегодня и закончилось завтра\nsetIsWork(true);setWorkTime(todayWorkTime.start_time.split(\":\")[0]+\":\"+todayWorkTime.start_time.split(\":\")[1]+\"-\"+todayWorkTime.end_time.split(\":\")[0]+\":\"+todayWorkTime.end_time.split(\":\")[1]);}else if(startTodayMS<endTodayMS&&currentTimeMS>startTodayMS&&currentTimeMS<endTodayMS){// началось и закончилось сегодня\nsetIsWork(true);setWorkTime(todayWorkTime.start_time.split(\":\")[0]+\":\"+todayWorkTime.start_time.split(\":\")[1]+\"-\"+todayWorkTime.end_time.split(\":\")[0]+\":\"+todayWorkTime.end_time.split(\":\")[1]);}else{setIsWork(false);setWorkTime(\"_Закрыто_ \"+todayWorkTime.start_time.split(\":\")[0]+\":\"+todayWorkTime.start_time.split(\":\")[1]+\"-\"+todayWorkTime.end_time.split(\":\")[0]+\":\"+todayWorkTime.end_time.split(\":\")[1]);}};","map":{"version":3,"sources":["D:/GitHub/party_live_web/src/calculateTime.js"],"names":["numberDayNow","Date","getDay","numberDayYest","HtoMs","MtoMs","currentTimeMS","getHours","getMinutes","isShowStreamNow","item","setShowStream","yesterdayStream","streams","schedules","todayStream","startYesterdayStreamMS","start_time","split","endYesterdayStreamMS","end_time","startTodayStreamMS","endTodayStreamMS","isWorkTimeNow","setWorkTime","setIsWork","yesterdayWorkTime","todayWorkTime","endYesterdayMS","startYesterdayMS","endTodayMS","startTodayMS"],"mappings":"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","sourcesContent":["const numberDayNow = new Date().getDay() === 0 ? 6 : new Date().getDay() - 1;\r\nlet numberDayYest;\r\n\r\nif (new Date().getDay() === 0) {\r\n  numberDayYest = 5;\r\n} else if (new Date().getDay() === 1) {\r\n  numberDayYest = 6;\r\n} else {\r\n  numberDayYest = new Date().getDay() - 2;\r\n}\r\n\r\nconst HtoMs = 3600000,\r\n  MtoMs = 60000;\r\n\r\nconst currentTimeMS =\r\n  new Date().getHours() * HtoMs + new Date().getMinutes() * MtoMs;\r\n\r\nexport const isShowStreamNow = (item, setShowStream) => {\r\n  const yesterdayStream = item.streams[0].schedules[numberDayYest],\r\n    todayStream = item.streams[0].schedules[numberDayNow];\r\n\r\n  const startYesterdayStreamMS =\r\n    yesterdayStream.start_time.split(\":\")[0] * HtoMs +\r\n    yesterdayStream.start_time.split(\":\")[1] * MtoMs;\r\n  const endYesterdayStreamMS =\r\n    yesterdayStream.end_time.split(\":\")[0] * HtoMs +\r\n    yesterdayStream.end_time.split(\":\")[1] * MtoMs;\r\n\r\n  const startTodayStreamMS =\r\n    todayStream.start_time.split(\":\")[0] * HtoMs +\r\n    todayStream.start_time.split(\":\")[1] * MtoMs;\r\n  const endTodayStreamMS =\r\n    todayStream.end_time.split(\":\")[0] * HtoMs +\r\n    todayStream.end_time.split(\":\")[1] * MtoMs;\r\n\r\n  if (\r\n    startYesterdayStreamMS > endYesterdayStreamMS &&\r\n    endYesterdayStreamMS > currentTimeMS\r\n  ) {\r\n    // идет видео за вчерашний день ещe\r\n    setShowStream(true);\r\n  } else if (\r\n    startTodayStreamMS > endTodayStreamMS &&\r\n    currentTimeMS > startTodayStreamMS\r\n  ) {\r\n    // если видео началось сегодня и закончилось завтра\r\n    setShowStream(true);\r\n  } else if (\r\n    startTodayStreamMS < endTodayStreamMS &&\r\n    currentTimeMS > startTodayStreamMS &&\r\n    currentTimeMS < endTodayStreamMS\r\n  ) {\r\n    // началось и закончилось сегодня\r\n    setShowStream(true);\r\n  } else {\r\n    setShowStream(false);\r\n  }\r\n};\r\n\r\nexport const isWorkTimeNow = (item, setWorkTime, setIsWork) => {\r\n  const yesterdayWorkTime = item.schedules[numberDayYest],\r\n    todayWorkTime = item.schedules[numberDayNow];\r\n\r\n  const endYesterdayMS =\r\n    yesterdayWorkTime.end_time.split(\":\")[0] * HtoMs +\r\n    yesterdayWorkTime.end_time.split(\":\")[1] * MtoMs;\r\n  const startYesterdayMS =\r\n    yesterdayWorkTime.start_time.split(\":\")[0] * HtoMs +\r\n    yesterdayWorkTime.start_time.split(\":\")[1] * MtoMs;\r\n  const endTodayMS =\r\n    todayWorkTime.end_time.split(\":\")[0] * HtoMs +\r\n    todayWorkTime.end_time.split(\":\")[1] * MtoMs;\r\n  const startTodayMS =\r\n    todayWorkTime.start_time.split(\":\")[0] * HtoMs +\r\n    todayWorkTime.start_time.split(\":\")[1] * MtoMs;\r\n\r\n  if (startYesterdayMS > endYesterdayMS && endYesterdayMS > currentTimeMS) {\r\n    // идет работа за вчерашний день ещe\r\n    setIsWork(true);\r\n    setWorkTime(\r\n      yesterdayWorkTime.start_time.split(\":\")[0] +\r\n        \":\" +\r\n        yesterdayWorkTime.start_time.split(\":\")[1] +\r\n        \"-\" +\r\n        yesterdayWorkTime.end_time.split(\":\")[0] +\r\n        \":\" +\r\n        yesterdayWorkTime.end_time.split(\":\")[1]\r\n    );\r\n  } else if (startTodayMS > endTodayMS && currentTimeMS > startTodayMS) {\r\n    // если работа началось сегодня и закончилось завтра\r\n    setIsWork(true);\r\n    setWorkTime(\r\n      todayWorkTime.start_time.split(\":\")[0] +\r\n        \":\" +\r\n        todayWorkTime.start_time.split(\":\")[1] +\r\n        \"-\" +\r\n        todayWorkTime.end_time.split(\":\")[0] +\r\n        \":\" +\r\n        todayWorkTime.end_time.split(\":\")[1]\r\n    );\r\n  } else if (\r\n    startTodayMS < endTodayMS &&\r\n    currentTimeMS > startTodayMS &&\r\n    currentTimeMS < endTodayMS\r\n  ) {\r\n    // началось и закончилось сегодня\r\n    setIsWork(true);\r\n    setWorkTime(\r\n      todayWorkTime.start_time.split(\":\")[0] +\r\n        \":\" +\r\n        todayWorkTime.start_time.split(\":\")[1] +\r\n        \"-\" +\r\n        todayWorkTime.end_time.split(\":\")[0] +\r\n        \":\" +\r\n        todayWorkTime.end_time.split(\":\")[1]\r\n    );\r\n  } else {\r\n    setIsWork(false);\r\n    setWorkTime(\r\n      \"_Закрыто_ \" +\r\n        todayWorkTime.start_time.split(\":\")[0] +\r\n        \":\" +\r\n        todayWorkTime.start_time.split(\":\")[1] +\r\n        \"-\" +\r\n        todayWorkTime.end_time.split(\":\")[0] +\r\n        \":\" +\r\n        todayWorkTime.end_time.split(\":\")[1]\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}