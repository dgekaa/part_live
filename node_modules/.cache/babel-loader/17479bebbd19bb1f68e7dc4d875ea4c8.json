{"ast":null,"code":"import _slicedToArray from\"D:\\\\GitHub\\\\party_live_web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from\"react\";import CompanyNav from\"../../components/companyNav/CompanyNav\";import TypeNav from\"../../components/typeNav/TypeNav\";import SmallCompanyBlock from\"../../components/smallCompanyBlock/SmallCompanyBlock\";import SlideSideMenu from\"../../components/slideSideMenu/SlideSideMenu\";import BottomMenu from\"../../components/bottomMenu/BottomMenu\";import Header from\"../../components/header/Header\";import Loader from\"../../components/loader/Loader\";import\"./home.css\";import QUERY from\"../../query\";var Home=function Home(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),DATA=_useState2[0],setDATA=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),companyData=_useState4[0],setCompanyData=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];useEffect(function(){QUERY({query:\"query {\\n        places {\\n          id name address description logo menu actions coordinates\\n          streams{url name id preview\\n            schedules{id day start_time end_time}\\n          }\\n          schedules {id day start_time end_time}\\n          categories {id name}\\n        }\\n      }\"}).then(function(res){return res.json();}).then(function(data){setIsLoading(false);setCompanyData(data.data.places);setDATA(data.data.places);}).catch(function(err){console.log(err,\"  ERR\");});},[]);var _clickedType=function clickedType(type){if(type){var filteredData=DATA.filter(function(el){return el.categories[0].name.toUpperCase()===type.toUpperCase();});setCompanyData(filteredData);}else{setCompanyData(DATA);}};var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showSlideSideMenu=_useState8[0],setShowSlideSideMenu=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isShowMenu=_useState10[0],setIsShowMenu=_useState10[1];var hideSideMenu=function hideSideMenu(){setShowSlideSideMenu(false);document.body.style.overflow=\"visible\";setIsShowMenu(false);};var showSideMenu=function showSideMenu(){setShowSlideSideMenu(true);document.body.style.overflow=\"hidden\";setIsShowMenu(true);};return React.createElement(\"div\",{onClick:function onClick(e){if(e.target.className!==\"SlideSideMenu\"&&showSlideSideMenu){hideSideMenu();}},style:isShowMenu?{animation:\"toLeft 0.3s ease\",position:\"relative\",right:\"200px\"}:{animation:\"toRight 0.3s ease\",position:\"relative\"}},React.createElement(\"div\",null,React.createElement(Header,{logo:true,burger:true,toSlideFixedHeader:isShowMenu,showSlideSideMenu:showSlideSideMenu,showSideMenu:showSideMenu}),React.createElement(\"div\",{className:\"homeContentWrap\"},React.createElement(\"div\",{className:\"navContainer\"},React.createElement(CompanyNav,{currentPage:\"/home\",toSlideFixedNav:isShowMenu,clickedType:function clickedType(type){_clickedType(type);}}),React.createElement(TypeNav,null)),React.createElement(\"div\",{className:\"homeContent\"},!!companyData.length&&companyData.map(function(el,i){return React.createElement(SmallCompanyBlock,{item:el,key:i});}),!companyData.length&&isLoading&&React.createElement(Loader,null),!companyData.length&&!isLoading&&React.createElement(\"div\",{style:{padding:\"20px\"}},\"\\u0417\\u0430\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u0439 \\u0441 \\u0434\\u0430\\u043D\\u043D\\u044B\\u043C \\u0442\\u0438\\u043F\\u043E \\u043D\\u0435\\u0442\"))),React.createElement(BottomMenu,{toSlideFixedBottomMenu:isShowMenu})),React.createElement(SlideSideMenu,{isShowMenu:isShowMenu}));};export default Home;// =================================================\n// const [isLogin, setIsLogin] = useState(false);\n// const requestBody = {\n//   query: `\n//     mutation {\n//       login (input: {\n//           username: \"admin@example.com\",\n//           password: \"password\"\n//       }) {\n//         access_token\n//         refresh_token\n//         expires_in\n//         token_type\n//         user {\n//           id\n//           name\n//           email\n//         }\n//       }\n//   }`\n// };\n// useEffect(() => {\n//   if (myContext.token) {\n//     fetch(\"http://194.87.95.37/graphql\", {\n//       method: \"POST\",\n//       body: JSON.stringify(requestBodyCreateNew),\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: \"Bearer \" + myContext.token\n//       }\n//     })\n//       .then(res => {\n//         if (res.status !== 200 && res.status !== 201) {\n//           throw new Error(\"Failed!!!\");\n//         }\n//         return res.json();\n//       })\n//       .then(data => {\n//         console.log(data, \" DATA ------2\");\n//       })\n//       .catch(err => {\n//         console.log(err, \"------------- ERRRRRRR\");\n//       });\n//   } else {\n//     console.log(\"ТОКЕНА НЕТ!!!!\");\n//   }\n// }, []);\n// ЭТО СОРТИРОВКА\n// const getSecondsTime = (year, month, day, hours, minutes) => {\n//   return Number(new Date(year, month, day, hours, minutes).getTime());\n// };\n// const current_time = new Date().getTime();\n// const year = new Date().getFullYear(),\n//   month = new Date().getMonth(),\n//   day = new Date().getDate();\n// const quickWorkTimeSort = object => {\n//   if (object.length <= 1) {\n//     return object;\n//   } else {\n//     const left = [],\n//       right = [];\n//     object.forEach((el, i) => {\n//       const startTime =\n//         +el.work_time[0].split(\":\")[0] * 3600 +\n//         +el.work_time[0].split(\":\")[1] * 60;\n//       let endTime =\n//         +el.work_time[1].split(\":\")[0] * 3600 +\n//         +el.work_time[1].split(\":\")[1] * 60;\n//       // ПОШЕЛ СЛЕДУЮЩИЙ ДЕНЬ (найти подругому)\n//       if (startTime > endTime) {\n//         //ПОЛУЧЕНИЕ СЛЕДУЮЩЕГО ДНЯ В СЕКУНДАХ\n//         const dayNow = new Date(year, month, day);\n//         const nextDay = new Date(dayNow);\n//         nextDay.setDate(dayNow.getDate() + 1);\n//         const fullEndTomorrowTime = nextDay.getTime() + endTime; // ВРЕМЯ КОНЦА РАБОТЫ ЗАВТРАШНИМ ДНЕМ\n//         if (\n//           getSecondsTime(\n//             year,\n//             month,\n//             day,\n//             +el.work_time[0].split(\":\")[0],\n//             +el.work_time[0].split(\":\")[1]\n//           ) <= Number(current_time) &&\n//           Number(fullEndTomorrowTime) > Number(current_time)\n//         ) {\n//           left.push(el);\n//         } else {\n//           right.push(el);\n//         }\n//       } else {\n//         // ВСЕ ПРОИСХОДИТ В ОДИН ДЕНЬ\n//         if (\n//           getSecondsTime(\n//             year,\n//             month,\n//             day,\n//             +el.work_time[0].split(\":\")[0],\n//             +el.work_time[0].split(\":\")[1]\n//           ) <= Number(current_time) &&\n//           getSecondsTime(\n//             year,\n//             month,\n//             day,\n//             +el.work_time[1].split(\":\")[0],\n//             +el.work_time[1].split(\":\")[1]\n//           ) > Number(current_time)\n//         ) {\n//           left.push(el);\n//         } else {\n//           right.push(el);\n//         }\n//       }\n//     });\n//     return [...left, ...right];\n//   }\n// };\n// const quickStreemTimeSort = object => {\n//   if (object.length <= 1) {\n//     return object;\n//   } else {\n//     const left = [],\n//       right = [];\n//     object.forEach((el, i) => {\n//       const startTime =\n//         +el.streem_time[0].split(\":\")[0] * 3600 +\n//         +el.streem_time[0].split(\":\")[1] * 60;\n//       let endTime =\n//         +el.streem_time[1].split(\":\")[0] * 3600 +\n//         +el.streem_time[1].split(\":\")[1] * 60;\n//       // ПОШЕЛ СЛЕДУЮЩИЙ ДЕНЬ (найти подругому)\n//       if (startTime > endTime) {\n//         //ПОЛУЧЕНИЕ СЛЕДУЮЩЕГО ДНЯ В СЕКУНДАХ\n//         const dayNow = new Date(year, month, day);\n//         const nextDay = new Date(dayNow);\n//         nextDay.setDate(dayNow.getDate() + 1);\n//         const fullEndTomorrowTime = nextDay.getTime() + endTime; // ВРЕМЯ КОНЦА РАБОТЫ ЗАВТРАШНИМ ДНЕМ\n//         if (\n//           getSecondsTime(\n//             year,\n//             month,\n//             day,\n//             +el.streem_time[0].split(\":\")[0],\n//             +el.streem_time[0].split(\":\")[1]\n//           ) <= Number(current_time) &&\n//           Number(fullEndTomorrowTime) > Number(current_time)\n//         ) {\n//           left.push(el);\n//         } else {\n//           right.push(el);\n//         }\n//       } else {\n//         // ВСЕ ПРОИСХОДИТ В ОДИН ДЕНЬ\n//         if (\n//           getSecondsTime(\n//             year,\n//             month,\n//             day,\n//             +el.streem_time[0].split(\":\")[0],\n//             +el.streem_time[0].split(\":\")[1]\n//           ) <= Number(current_time) &&\n//           getSecondsTime(\n//             year,\n//             month,\n//             day,\n//             +el.streem_time[1].split(\":\")[0],\n//             +el.streem_time[1].split(\":\")[1]\n//           ) > Number(current_time)\n//         ) {\n//           left.push(el);\n//         } else {\n//           right.push(el);\n//         }\n//       }\n//     });\n//     return [...left, ...right];\n//   }\n// };","map":{"version":3,"sources":["D:/GitHub/party_live_web/src/pages/home/Home.js"],"names":["React","useState","useEffect","useContext","CompanyNav","TypeNav","SmallCompanyBlock","SlideSideMenu","BottomMenu","Header","Loader","QUERY","Home","props","DATA","setDATA","companyData","setCompanyData","isLoading","setIsLoading","query","then","res","json","data","places","catch","err","console","log","clickedType","type","filteredData","filter","el","categories","name","toUpperCase","showSlideSideMenu","setShowSlideSideMenu","isShowMenu","setIsShowMenu","hideSideMenu","document","body","style","overflow","showSideMenu","e","target","className","animation","position","right","length","map","i","padding"],"mappings":"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":["import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport CompanyNav from \"../../components/companyNav/CompanyNav\";\r\nimport TypeNav from \"../../components/typeNav/TypeNav\";\r\nimport SmallCompanyBlock from \"../../components/smallCompanyBlock/SmallCompanyBlock\";\r\nimport SlideSideMenu from \"../../components/slideSideMenu/SlideSideMenu\";\r\nimport BottomMenu from \"../../components/bottomMenu/BottomMenu\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Loader from \"../../components/loader/Loader\";\r\n\r\nimport \"./home.css\";\r\n\r\nimport QUERY from \"../../query\";\r\n\r\nconst Home = props => {\r\n  const [DATA, setDATA] = useState([]);\r\n  const [companyData, setCompanyData] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    QUERY({\r\n      query: `query {\r\n        places {\r\n          id name address description logo menu actions coordinates\r\n          streams{url name id preview\r\n            schedules{id day start_time end_time}\r\n          }\r\n          schedules {id day start_time end_time}\r\n          categories {id name}\r\n        }\r\n      }`\r\n    })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsLoading(false);\r\n        setCompanyData(data.data.places);\r\n        setDATA(data.data.places);\r\n      })\r\n      .catch(err => {\r\n        console.log(err, \"  ERR\");\r\n      });\r\n  }, []);\r\n\r\n  const clickedType = type => {\r\n    if (type) {\r\n      const filteredData = DATA.filter(\r\n        el => el.categories[0].name.toUpperCase() === type.toUpperCase()\r\n      );\r\n      setCompanyData(filteredData);\r\n    } else {\r\n      setCompanyData(DATA);\r\n    }\r\n  };\r\n\r\n  const [showSlideSideMenu, setShowSlideSideMenu] = useState(false);\r\n  const [isShowMenu, setIsShowMenu] = useState(false);\r\n\r\n  const hideSideMenu = () => {\r\n    setShowSlideSideMenu(false);\r\n    document.body.style.overflow = \"visible\";\r\n    setIsShowMenu(false);\r\n  };\r\n\r\n  const showSideMenu = () => {\r\n    setShowSlideSideMenu(true);\r\n    document.body.style.overflow = \"hidden\";\r\n    setIsShowMenu(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={e => {\r\n        if (e.target.className !== \"SlideSideMenu\" && showSlideSideMenu) {\r\n          hideSideMenu();\r\n        }\r\n      }}\r\n      style={\r\n        isShowMenu\r\n          ? {\r\n              animation: \"toLeft 0.3s ease\",\r\n              position: \"relative\",\r\n              right: \"200px\"\r\n            }\r\n          : {\r\n              animation: \"toRight 0.3s ease\",\r\n              position: \"relative\"\r\n            }\r\n      }\r\n    >\r\n      <div>\r\n        <Header\r\n          logo\r\n          burger\r\n          toSlideFixedHeader={isShowMenu}\r\n          showSlideSideMenu={showSlideSideMenu}\r\n          showSideMenu={showSideMenu}\r\n        />\r\n        <div className=\"homeContentWrap\">\r\n          <div className=\"navContainer\">\r\n            <CompanyNav\r\n              currentPage=\"/home\"\r\n              toSlideFixedNav={isShowMenu}\r\n              clickedType={type => {\r\n                clickedType(type);\r\n              }}\r\n            />\r\n            <TypeNav />\r\n          </div>\r\n          <div className=\"homeContent\">\r\n            {!!companyData.length &&\r\n              companyData.map((el, i) => (\r\n                <SmallCompanyBlock item={el} key={i} />\r\n              ))}\r\n            {!companyData.length && isLoading && <Loader />}\r\n            {!companyData.length && !isLoading && (\r\n              <div\r\n                style={{\r\n                  padding: \"20px\"\r\n                }}\r\n              >\r\n                Заведений с данным типо нет\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <BottomMenu toSlideFixedBottomMenu={isShowMenu} />\r\n      </div>\r\n      <SlideSideMenu isShowMenu={isShowMenu} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n// =================================================\r\n// const [isLogin, setIsLogin] = useState(false);\r\n\r\n// const requestBody = {\r\n//   query: `\r\n//     mutation {\r\n//       login (input: {\r\n//           username: \"admin@example.com\",\r\n//           password: \"password\"\r\n//       }) {\r\n//         access_token\r\n//         refresh_token\r\n//         expires_in\r\n//         token_type\r\n//         user {\r\n//           id\r\n//           name\r\n//           email\r\n//         }\r\n//       }\r\n//   }`\r\n// };\r\n// useEffect(() => {\r\n//   if (myContext.token) {\r\n//     fetch(\"http://194.87.95.37/graphql\", {\r\n//       method: \"POST\",\r\n//       body: JSON.stringify(requestBodyCreateNew),\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: \"Bearer \" + myContext.token\r\n//       }\r\n//     })\r\n//       .then(res => {\r\n//         if (res.status !== 200 && res.status !== 201) {\r\n//           throw new Error(\"Failed!!!\");\r\n//         }\r\n//         return res.json();\r\n//       })\r\n//       .then(data => {\r\n//         console.log(data, \" DATA ------2\");\r\n//       })\r\n//       .catch(err => {\r\n//         console.log(err, \"------------- ERRRRRRR\");\r\n//       });\r\n//   } else {\r\n//     console.log(\"ТОКЕНА НЕТ!!!!\");\r\n//   }\r\n// }, []);\r\n\r\n// ЭТО СОРТИРОВКА\r\n// const getSecondsTime = (year, month, day, hours, minutes) => {\r\n//   return Number(new Date(year, month, day, hours, minutes).getTime());\r\n// };\r\n\r\n// const current_time = new Date().getTime();\r\n// const year = new Date().getFullYear(),\r\n//   month = new Date().getMonth(),\r\n//   day = new Date().getDate();\r\n\r\n// const quickWorkTimeSort = object => {\r\n//   if (object.length <= 1) {\r\n//     return object;\r\n//   } else {\r\n//     const left = [],\r\n//       right = [];\r\n\r\n//     object.forEach((el, i) => {\r\n//       const startTime =\r\n//         +el.work_time[0].split(\":\")[0] * 3600 +\r\n//         +el.work_time[0].split(\":\")[1] * 60;\r\n//       let endTime =\r\n//         +el.work_time[1].split(\":\")[0] * 3600 +\r\n//         +el.work_time[1].split(\":\")[1] * 60;\r\n\r\n//       // ПОШЕЛ СЛЕДУЮЩИЙ ДЕНЬ (найти подругому)\r\n//       if (startTime > endTime) {\r\n//         //ПОЛУЧЕНИЕ СЛЕДУЮЩЕГО ДНЯ В СЕКУНДАХ\r\n//         const dayNow = new Date(year, month, day);\r\n//         const nextDay = new Date(dayNow);\r\n//         nextDay.setDate(dayNow.getDate() + 1);\r\n//         const fullEndTomorrowTime = nextDay.getTime() + endTime; // ВРЕМЯ КОНЦА РАБОТЫ ЗАВТРАШНИМ ДНЕМ\r\n\r\n//         if (\r\n//           getSecondsTime(\r\n//             year,\r\n//             month,\r\n//             day,\r\n//             +el.work_time[0].split(\":\")[0],\r\n//             +el.work_time[0].split(\":\")[1]\r\n//           ) <= Number(current_time) &&\r\n//           Number(fullEndTomorrowTime) > Number(current_time)\r\n//         ) {\r\n//           left.push(el);\r\n//         } else {\r\n//           right.push(el);\r\n//         }\r\n//       } else {\r\n//         // ВСЕ ПРОИСХОДИТ В ОДИН ДЕНЬ\r\n//         if (\r\n//           getSecondsTime(\r\n//             year,\r\n//             month,\r\n//             day,\r\n//             +el.work_time[0].split(\":\")[0],\r\n//             +el.work_time[0].split(\":\")[1]\r\n//           ) <= Number(current_time) &&\r\n//           getSecondsTime(\r\n//             year,\r\n//             month,\r\n//             day,\r\n//             +el.work_time[1].split(\":\")[0],\r\n//             +el.work_time[1].split(\":\")[1]\r\n//           ) > Number(current_time)\r\n//         ) {\r\n//           left.push(el);\r\n//         } else {\r\n//           right.push(el);\r\n//         }\r\n//       }\r\n//     });\r\n//     return [...left, ...right];\r\n//   }\r\n// };\r\n\r\n// const quickStreemTimeSort = object => {\r\n//   if (object.length <= 1) {\r\n//     return object;\r\n//   } else {\r\n//     const left = [],\r\n//       right = [];\r\n\r\n//     object.forEach((el, i) => {\r\n//       const startTime =\r\n//         +el.streem_time[0].split(\":\")[0] * 3600 +\r\n//         +el.streem_time[0].split(\":\")[1] * 60;\r\n//       let endTime =\r\n//         +el.streem_time[1].split(\":\")[0] * 3600 +\r\n//         +el.streem_time[1].split(\":\")[1] * 60;\r\n\r\n//       // ПОШЕЛ СЛЕДУЮЩИЙ ДЕНЬ (найти подругому)\r\n//       if (startTime > endTime) {\r\n//         //ПОЛУЧЕНИЕ СЛЕДУЮЩЕГО ДНЯ В СЕКУНДАХ\r\n//         const dayNow = new Date(year, month, day);\r\n//         const nextDay = new Date(dayNow);\r\n//         nextDay.setDate(dayNow.getDate() + 1);\r\n//         const fullEndTomorrowTime = nextDay.getTime() + endTime; // ВРЕМЯ КОНЦА РАБОТЫ ЗАВТРАШНИМ ДНЕМ\r\n\r\n//         if (\r\n//           getSecondsTime(\r\n//             year,\r\n//             month,\r\n//             day,\r\n//             +el.streem_time[0].split(\":\")[0],\r\n//             +el.streem_time[0].split(\":\")[1]\r\n//           ) <= Number(current_time) &&\r\n//           Number(fullEndTomorrowTime) > Number(current_time)\r\n//         ) {\r\n//           left.push(el);\r\n//         } else {\r\n//           right.push(el);\r\n//         }\r\n//       } else {\r\n//         // ВСЕ ПРОИСХОДИТ В ОДИН ДЕНЬ\r\n//         if (\r\n//           getSecondsTime(\r\n//             year,\r\n//             month,\r\n//             day,\r\n//             +el.streem_time[0].split(\":\")[0],\r\n//             +el.streem_time[0].split(\":\")[1]\r\n//           ) <= Number(current_time) &&\r\n//           getSecondsTime(\r\n//             year,\r\n//             month,\r\n//             day,\r\n//             +el.streem_time[1].split(\":\")[0],\r\n//             +el.streem_time[1].split(\":\")[1]\r\n//           ) > Number(current_time)\r\n//         ) {\r\n//           left.push(el);\r\n//         } else {\r\n//           right.push(el);\r\n//         }\r\n//       }\r\n//     });\r\n//     return [...left, ...right];\r\n//   }\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}