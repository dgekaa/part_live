{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\party_live_web\\\\src\\\\components\\\\companyNav\\\\CompanyNav.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport QUERY from \"../../query\";\nimport \"./companyNav.css\";\nimport smoothscroll from \"smoothscroll-polyfill\";\n\nconst CompanyNav = ({\n  style,\n  clickedType,\n  currentPage,\n  toSlideFixedNav\n}) => {\n  const [uniqueCompanyType, setUniqueCompanyType] = useState([]);\n  const [isDown, setIsDown] = useState(false);\n  const [startX, setStartX] = useState();\n  const [scrollLeft, setScrollLeft] = useState();\n  const [clickedTypeLocal, setClickedTypeLocal] = useState();\n  const slideBtnMenu = useRef(null);\n  useEffect(() => {\n    QUERY({\n      query: `query {\n        categories {\n          id name slug\n        }\n      }`\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      setUniqueCompanyType(data.data.categories);\n    }).catch(err => {\n      console.log(err, \"  ERR\");\n    });\n  }, []);\n  const supportsTouch = \"ontouchstart\" in document.documentElement;\n  smoothscroll.polyfill();\n\n  const scrollBtnToCenter = e => {\n    e.preventDefault();\n    const btnPositionToCenter = slideBtnMenu.current.offsetWidth / 2 - (e.currentTarget.offsetLeft - slideBtnMenu.current.scrollLeft + e.currentTarget.offsetWidth / 2);\n    slideBtnMenu.current.scrollTo({\n      left: slideBtnMenu.current.scrollLeft - btnPositionToCenter,\n      behavior: \"smooth\"\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"overflowClass\",\n    style: ({ ...style\n    }, toSlideFixedNav ? {\n      animation: \"toLeftFixed 0.3s ease\",\n      left: \"-200px\"\n    } : {\n      animation: \"toRightFixed 0.3s ease\",\n      left: \"0px\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"сompanyNav\",\n    ref: slideBtnMenu // //BROWSER ===========================================\n    ,\n    onMouseDown: e => {\n      if (!supportsTouch) {\n        setIsDown(true);\n        setStartX(e.pageX - slideBtnMenu.current.offsetLeft);\n        setScrollLeft(slideBtnMenu.current.scrollLeft);\n      }\n    },\n    onMouseLeave: () => {\n      if (!supportsTouch) {\n        setIsDown(false);\n      }\n    },\n    onMouseUp: () => {\n      if (!supportsTouch) {\n        setIsDown(false);\n      }\n    },\n    onMouseMove: e => {\n      if (!supportsTouch) {\n        if (!isDown) return;\n        e.preventDefault();\n        const x = e.pageX - slideBtnMenu.current.offsetLeft;\n        const walk = (x - startX) * 2;\n        slideBtnMenu.current.scrollLeft = scrollLeft - walk;\n      }\n    } //TOUCH =============================================\n    // onTouchStart={e => {\n    //   if (supportsTouch) {\n    //     setIsDown(true);\n    //     setStartX(\n    //       Math.ceil(e.nativeEvent.touches[0].clientX) -\n    //         slideBtnMenu.current.offsetLeft\n    //     );\n    //     setScrollLeft(slideBtnMenu.current.scrollLeft);\n    //   }\n    // }}\n    // onTouchEnd={e => {\n    //   if (supportsTouch) {\n    //     setIsDown(false);\n    //   }\n    // }}\n    // onTouchMove={e => {\n    //   if (supportsTouch) {\n    //     const x =\n    //       e.nativeEvent.touches[0].clientX -\n    //       slideBtnMenu.current.offsetLeft;\n    //     const walk = (x - startX) * 2;\n    //     slideBtnMenu.current.scrollLeft = scrollLeft - walk;\n    //   }\n    // }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: !clickedTypeLocal ? \"companyNavBlock activeBtn\" : \"companyNavBlock\",\n    onClick: e => {\n      clickedType();\n      setClickedTypeLocal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: !clickedTypeLocal ? \"companyNavLink activeBtnText\" : \"companyNavLink\",\n    to: currentPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"allText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"\\u0412\\u0441\\u0435\"))), uniqueCompanyType.map((el, i) => {\n    const slideBtn = React.createRef();\n    return React.createElement(\"div\", {\n      ref: slideBtn,\n      className: clickedTypeLocal === el.name ? \"companyNavBlock activeBtn\" : \"companyNavBlock\",\n      key: i,\n      onClick: e => {\n        clickedType(el.name);\n        setClickedTypeLocal(el.name);\n        scrollBtnToCenter(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: clickedTypeLocal === el.name ? \"companyNavLink activeBtnText\" : \"companyNavLink\",\n      to: currentPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Icon\",\n      className: \"\\u0441ompanyNavImg\",\n      src: `${process.env.PUBLIC_URL}/img/${el.slug}.png`,\n      width: \"30\",\n      height: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"\\u0441ompanyNavText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, el.name)));\n  })));\n};\n\nexport default CompanyNav;","map":{"version":3,"sources":["D:/GitHub/party_live_web/src/components/companyNav/CompanyNav.js"],"names":["React","useState","useRef","useEffect","Link","QUERY","smoothscroll","CompanyNav","style","clickedType","currentPage","toSlideFixedNav","uniqueCompanyType","setUniqueCompanyType","isDown","setIsDown","startX","setStartX","scrollLeft","setScrollLeft","clickedTypeLocal","setClickedTypeLocal","slideBtnMenu","query","then","res","json","data","categories","catch","err","console","log","supportsTouch","document","documentElement","polyfill","scrollBtnToCenter","e","preventDefault","btnPositionToCenter","current","offsetWidth","currentTarget","offsetLeft","scrollTo","left","behavior","animation","pageX","x","walk","map","el","i","slideBtn","createRef","name","process","env","PUBLIC_URL","slug"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport QUERY from \"../../query\";\r\n\r\nimport \"./companyNav.css\";\r\nimport smoothscroll from \"smoothscroll-polyfill\";\r\n\r\nconst CompanyNav = ({ style, clickedType, currentPage, toSlideFixedNav }) => {\r\n  const [uniqueCompanyType, setUniqueCompanyType] = useState([]);\r\n\r\n  const [isDown, setIsDown] = useState(false);\r\n  const [startX, setStartX] = useState();\r\n  const [scrollLeft, setScrollLeft] = useState();\r\n  const [clickedTypeLocal, setClickedTypeLocal] = useState();\r\n\r\n  const slideBtnMenu = useRef(null);\r\n\r\n  useEffect(() => {\r\n    QUERY({\r\n      query: `query {\r\n        categories {\r\n          id name slug\r\n        }\r\n      }`\r\n    })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setUniqueCompanyType(data.data.categories);\r\n      })\r\n      .catch(err => {\r\n        console.log(err, \"  ERR\");\r\n      });\r\n  }, []);\r\n\r\n  const supportsTouch = \"ontouchstart\" in document.documentElement;\r\n  smoothscroll.polyfill();\r\n\r\n  const scrollBtnToCenter = e => {\r\n    e.preventDefault();\r\n    const btnPositionToCenter =\r\n      slideBtnMenu.current.offsetWidth / 2 -\r\n      (e.currentTarget.offsetLeft -\r\n        slideBtnMenu.current.scrollLeft +\r\n        e.currentTarget.offsetWidth / 2);\r\n\r\n    slideBtnMenu.current.scrollTo({\r\n      left: slideBtnMenu.current.scrollLeft - btnPositionToCenter,\r\n      behavior: \"smooth\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"overflowClass\"\r\n      style={\r\n        ({\r\n          ...style\r\n        },\r\n        toSlideFixedNav\r\n          ? {\r\n              animation: \"toLeftFixed 0.3s ease\",\r\n              left: \"-200px\"\r\n            }\r\n          : {\r\n              animation: \"toRightFixed 0.3s ease\",\r\n              left: \"0px\"\r\n            })\r\n      }\r\n    >\r\n      <div\r\n        className={\"сompanyNav\"}\r\n        ref={slideBtnMenu}\r\n        // //BROWSER ===========================================\r\n        onMouseDown={e => {\r\n          if (!supportsTouch) {\r\n            setIsDown(true);\r\n            setStartX(e.pageX - slideBtnMenu.current.offsetLeft);\r\n            setScrollLeft(slideBtnMenu.current.scrollLeft);\r\n          }\r\n        }}\r\n        onMouseLeave={() => {\r\n          if (!supportsTouch) {\r\n            setIsDown(false);\r\n          }\r\n        }}\r\n        onMouseUp={() => {\r\n          if (!supportsTouch) {\r\n            setIsDown(false);\r\n          }\r\n        }}\r\n        onMouseMove={e => {\r\n          if (!supportsTouch) {\r\n            if (!isDown) return;\r\n            e.preventDefault();\r\n            const x = e.pageX - slideBtnMenu.current.offsetLeft;\r\n            const walk = (x - startX) * 2;\r\n            slideBtnMenu.current.scrollLeft = scrollLeft - walk;\r\n          }\r\n        }}\r\n        //TOUCH =============================================\r\n        // onTouchStart={e => {\r\n        //   if (supportsTouch) {\r\n        //     setIsDown(true);\r\n        //     setStartX(\r\n        //       Math.ceil(e.nativeEvent.touches[0].clientX) -\r\n        //         slideBtnMenu.current.offsetLeft\r\n        //     );\r\n        //     setScrollLeft(slideBtnMenu.current.scrollLeft);\r\n        //   }\r\n        // }}\r\n        // onTouchEnd={e => {\r\n        //   if (supportsTouch) {\r\n        //     setIsDown(false);\r\n        //   }\r\n        // }}\r\n        // onTouchMove={e => {\r\n        //   if (supportsTouch) {\r\n        //     const x =\r\n        //       e.nativeEvent.touches[0].clientX -\r\n        //       slideBtnMenu.current.offsetLeft;\r\n        //     const walk = (x - startX) * 2;\r\n        //     slideBtnMenu.current.scrollLeft = scrollLeft - walk;\r\n        //   }\r\n        // }}\r\n      >\r\n        <div\r\n          className={\r\n            !clickedTypeLocal ? \"companyNavBlock activeBtn\" : \"companyNavBlock\"\r\n          }\r\n          onClick={e => {\r\n            clickedType();\r\n            setClickedTypeLocal();\r\n          }}\r\n        >\r\n          <Link\r\n            className={\r\n              !clickedTypeLocal\r\n                ? \"companyNavLink activeBtnText\"\r\n                : \"companyNavLink\"\r\n            }\r\n            to={currentPage}\r\n          >\r\n            <p className=\"allText\">Все</p>\r\n          </Link>\r\n        </div>\r\n        {uniqueCompanyType.map((el, i) => {\r\n          const slideBtn = React.createRef();\r\n          return (\r\n            <div\r\n              ref={slideBtn}\r\n              className={\r\n                clickedTypeLocal === el.name\r\n                  ? \"companyNavBlock activeBtn\"\r\n                  : \"companyNavBlock\"\r\n              }\r\n              key={i}\r\n              onClick={e => {\r\n                clickedType(el.name);\r\n                setClickedTypeLocal(el.name);\r\n                scrollBtnToCenter(e);\r\n              }}\r\n            >\r\n              <Link\r\n                className={\r\n                  clickedTypeLocal === el.name\r\n                    ? \"companyNavLink activeBtnText\"\r\n                    : \"companyNavLink\"\r\n                }\r\n                to={currentPage}\r\n              >\r\n                <img\r\n                  alt=\"Icon\"\r\n                  className=\"сompanyNavImg\"\r\n                  src={`${process.env.PUBLIC_URL}/img/${el.slug}.png`}\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                />\r\n                <p className=\"сompanyNavText\">{el.name}</p>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyNav;\r\n"]},"metadata":{},"sourceType":"module"}