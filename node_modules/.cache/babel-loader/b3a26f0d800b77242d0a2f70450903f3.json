{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\party_live_web\\\\src\\\\components\\\\smallCompanyBlock\\\\SmallCompanyBlock.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./smallCompanyBlock.css\";\nimport { Link } from \"react-router-dom\";\nimport { isShowStreamNow, isWorkTimeNow } from \"../../calculateTime\";\nimport { getDistanceFromLatLonInKm } from \"../../getDistance\";\n\nconst SmallCompanyBlock = ({\n  item\n}) => {\n  const [showStream, setShowStream] = useState(false);\n  const [workTime, setWorkTime] = useState(false);\n  const [isWork, setIsWork] = useState(false);\n  const [curDistance, setCurDistance] = useState(null);\n  useEffect(() => {\n    isShowStreamNow(item, setShowStream);\n    isWorkTimeNow(item, setWorkTime, setIsWork);\n  }, [item]);\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(pos => {\n      setCurDistance(getDistanceFromLatLonInKm(pos.coords.latitude, pos.coords.longitude, item.coordinates.split(\",\")[0], item.coordinates.split(\",\")[1]));\n    }, err => {\n      console.log(err, \" GEOLOCATION ERROR \");\n    });\n  } else {\n    console.log(\"Геолокация недоступна \");\n  }\n\n  return React.createElement(Link, {\n    to: {\n      pathname: `/company/${item.id}`\n    },\n    className: \"SmallCompanyBlock1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"imgContainer1\",\n    style: {\n      background: \"#000\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, !!showStream && React.createElement(\"video\", {\n    className: \"companyImg1\",\n    src: item.streams[0].preview,\n    autoPlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), !showStream && React.createElement(\"div\", {\n    className: \"companyImg1\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      color: \"#fff\",\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"\\u041D\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0439 \\u043C\\u043E\\u043C\\u0435\\u043D\\u0442 \\u0441\\u0442\\u0440\\u0438\\u043C \\u043D\\u0435 \\u0438\\u0434\\u0435\\u0442\"))), React.createElement(\"div\", {\n    className: \"description1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"topBlockText1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"companyNameWrap1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"companyName1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, item.name), React.createElement(\"p\", {\n    className: \"companyType1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, item.categories[0].name, \" \"))), React.createElement(\"div\", {\n    className: \"bottomBlockText1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"leftText1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\")), React.createElement(\"p\", {\n    className: \"rightText1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, workTime))), React.createElement(\"div\", {\n    className: \"descriptionMobile1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"nameOfCompany1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, item.categories[0].name, \" \\u201C\", item.name, \"\\u201D\"), React.createElement(\"p\", {\n    className: \"distanceFirst1 distanceFirstLeft1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, curDistance && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, Number(curDistance).toFixed(2), \" km\"), !curDistance && \" 0 km.\"), isWork && React.createElement(\"p\", {\n    className: \"endTime1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u043E: \\u0434\\u043E\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \" \", workTime.split(\"-\")[1])), !isWork && React.createElement(\"p\", {\n    className: \"endTime1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u043E\")));\n};\n\nexport default SmallCompanyBlock;","map":{"version":3,"sources":["D:/GitHub/party_live_web/src/components/smallCompanyBlock/SmallCompanyBlock.js"],"names":["React","useState","useEffect","Link","isShowStreamNow","isWorkTimeNow","getDistanceFromLatLonInKm","SmallCompanyBlock","item","showStream","setShowStream","workTime","setWorkTime","isWork","setIsWork","curDistance","setCurDistance","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","coordinates","split","err","console","log","pathname","id","background","streams","preview","display","alignItems","justifyContent","color","textAlign","padding","name","categories","Number","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./smallCompanyBlock.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { isShowStreamNow, isWorkTimeNow } from \"../../calculateTime\";\r\nimport { getDistanceFromLatLonInKm } from \"../../getDistance\";\r\n\r\nconst SmallCompanyBlock = ({ item }) => {\r\n  const [showStream, setShowStream] = useState(false);\r\n  const [workTime, setWorkTime] = useState(false);\r\n  const [isWork, setIsWork] = useState(false);\r\n  const [curDistance, setCurDistance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    isShowStreamNow(item, setShowStream);\r\n    isWorkTimeNow(item, setWorkTime, setIsWork);\r\n  }, [item]);\r\n\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(\r\n      pos => {\r\n        setCurDistance(\r\n          getDistanceFromLatLonInKm(\r\n            pos.coords.latitude,\r\n            pos.coords.longitude,\r\n            item.coordinates.split(\",\")[0],\r\n            item.coordinates.split(\",\")[1]\r\n          )\r\n        );\r\n      },\r\n      err => {\r\n        console.log(err, \" GEOLOCATION ERROR \");\r\n      }\r\n    );\r\n  } else {\r\n    console.log(\"Геолокация недоступна \");\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      to={{ pathname: `/company/${item.id}` }}\r\n      className=\"SmallCompanyBlock1\"\r\n    >\r\n      <div className=\"imgContainer1\" style={{ background: \"#000\" }}>\r\n        {!!showStream && (\r\n          <video\r\n            className=\"companyImg1\"\r\n            src={item.streams[0].preview}\r\n            autoPlay\r\n          />\r\n        )}\r\n        {!showStream && (\r\n          <div\r\n            className=\"companyImg1\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\"\r\n            }}\r\n          >\r\n            <p style={{ color: \"#fff\", textAlign: \"center\", padding: \"20px\" }}>\r\n              На данный момент стрим не идет\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"description1\">\r\n        <div className=\"topBlockText1\">\r\n          <div className=\"companyNameWrap1\">\r\n            <p className=\"companyName1\">{item.name}</p>\r\n            <p className=\"companyType1\">{item.categories[0].name} </p>\r\n          </div>\r\n          {/* <p className=\"companyTitle1\">???????</p> */}\r\n        </div>\r\n        <div className=\"bottomBlockText1\">\r\n          <div className=\"row1\">\r\n            <p className=\"leftText1\">Время работы</p>\r\n          </div>\r\n          <p className=\"rightText1\">{workTime}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"descriptionMobile1\">\r\n        <p className=\"nameOfCompany1\">\r\n          {item.categories[0].name} “{item.name}”\r\n        </p>\r\n        <p className=\"distanceFirst1 distanceFirstLeft1\">\r\n          {curDistance && <span>{Number(curDistance).toFixed(2)} km</span>}\r\n          {!curDistance && \" 0 km.\"}\r\n        </p>\r\n        {isWork && (\r\n          <p className=\"endTime1\">\r\n            Открыто: до\r\n            <span> {workTime.split(\"-\")[1]}</span>\r\n          </p>\r\n        )}\r\n        {!isWork && (\r\n          <p className=\"endTime1\">\r\n            {/* {workTime} */}\r\n            Закрыто\r\n          </p>\r\n        )}\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default SmallCompanyBlock;\r\n"]},"metadata":{},"sourceType":"module"}